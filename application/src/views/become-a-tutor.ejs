<!-- application/src/views/become-a-tutor.ejs -->
<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>GatorTutor - Become a Tutor</title>
    <link href="https://cdn.jsdelivr.net/npm/@yaireo/tagify/dist/tagify.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/css/tailwind.css" />
    <link rel="stylesheet" href="/css/custom.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/flowbite/dist/flowbite.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@2.8.2/dist/alpine.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/@yaireo/tagify"></script>
  </head>

  <body class="flex flex-col min-h-full bg-gray-100">
    <%- include('partials/header') %>
    
    <main class="container flex-grow px-4 py-8 mx-auto mt-20">
        <div class="max-w-3xl mx-auto overflow-hidden bg-white rounded-lg shadow-lg">
            <div class="px-6 py-4 bg-indigo-600">
                <h1 class="text-2xl font-bold text-white">Become a Tutor</h1>
            </div>
            
            <form id="tutorForm" action="/become-a-tutor" method="POST" enctype="multipart/form-data" class="p-6 space-y-6">
                <!-- Profile Photo and Video Upload -->
                <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
                    <div>
                        <label for="profilePhoto" class="block mb-2 text-sm font-medium text-gray-700">Profile Photo</label>
                        <div class="flex items-center justify-center w-full">
                            <label for="profilePhoto" class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100">
                                <div class="flex flex-col items-center justify-center pt-5 pb-6">
                                    <img id="profilePhotoPreview" src="/images/blank-pfp.png" alt="Profile Photo" class="object-cover w-32 h-32 mb-3 rounded-full">
                                    <p class="mb-2 text-sm text-gray-500"><span class="font-semibold">Click to upload</span> or drag and drop</p>
                                    <p class="text-xs text-gray-500">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
                                </div>
                                <input id="profilePhoto" name="profilePhoto" type="file" class="hidden" />
                            </label>
                        </div>
                    </div>
                    <div>
                        <label for="profileVideo" class="block mb-2 text-sm font-medium text-gray-700">Profile Video</label>
                        <div class="flex items-center justify-center w-full">
                            <label for="profileVideo" class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100">
                                <div class="flex flex-col items-center justify-center pt-5 pb-6">
                                    <video id="profileVideoPreview" class="hidden object-cover w-full h-full"></video>
                                    <svg class="w-8 h-8 mb-4 text-gray-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"/>
                                    </svg>
                                    <p class="mb-2 text-sm text-gray-500"><span class="font-semibold">Click to upload</span> or drag and drop</p>
                                    <p class="text-xs text-gray-500">MP4, WebM, or OGG (MAX. 10MB)</p>
                                </div>
                                <input id="profileVideo" name="profileVideo" type="file" class="hidden" />
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Bio -->
                <div>
                    <label for="bio" class="block mb-2 text-sm font-medium text-gray-700">Bio</label>
                    <textarea id="bio" name="bio" rows="4" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" placeholder="Tell us about yourself and your tutoring experience..." required></textarea>
                </div>

                <!-- Hourly Rate and Phone Number -->
                <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
                    <div>
                        <label for="hourlyRate" class="block mb-2 text-sm font-medium text-gray-700">Hourly Rate ($)</label>
                        <input type="number" id="hourlyRate" name="hourlyRate" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" required>
                    </div>
                    <div>
                        <label for="phoneNumber" class="block mb-2 text-sm font-medium text-gray-700">Phone Number</label>
                        <input type="tel" id="phoneNumber" name="contact_info" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" placeholder="e.g., (123) 456-7890" required>
                    </div>
                </div>

                <!-- Subjects -->
                <div>
                    <label for="subjects" class="block mb-2 text-sm font-medium text-gray-700">Subjects</label>
                    <input id="subjects" name="subjects" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" placeholder="Add subjects...">
                </div>

                <!-- Availability -->
                <div>
                    <label class="block mb-2 text-sm font-medium text-gray-700">Availability</label>
                    <div id="availabilitySections" class="space-y-4">
                        <!-- Availability sections will be added here dynamically -->
                    </div>
                    <button type="button" id="addAvailability" class="px-4 py-2 mt-4 text-white bg-indigo-600 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                        Add Availability
                    </button>
                </div>

                <!-- Submit Button -->
                <div>
                    <button type="submit" class="w-full px-4 py-2 text-white bg-green-600 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                        Submit Application
                    </button>
                </div>
            </form>
        </div>
    </main>

    <%- include('partials/footer') %>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Initialize Tagify for Subjects
            const subjectsInput = document.getElementById("subjects");
            const subjectsList = <%- JSON.stringify(subjects) %>.map(subject => subject.subject_name);

            const tagify = new Tagify(subjectsInput, {
                whitelist: subjectsList,
                enforceWhitelist: true,
                dropdown: {
                    maxItems: 20,
                    classname: "tags-look",
                    enabled: 0,
                    closeOnSelect: false
                }
            });

            // Availability section functionality
            const addAvailabilityBtn = document.getElementById("addAvailability");
            const availabilitySections = document.getElementById("availabilitySections");

            addAvailabilityBtn.addEventListener("click", addAvailabilitySection);

            function addAvailabilitySection() {
                const section = document.createElement("div");
                section.className = "flex flex-wrap items-center space-x-2 space-y-2 availability-section";
                section.innerHTML = `
                    <select name="day[]" class="border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" required>
                        <option value="" disabled selected>Day</option>
                        <option value="Monday">Monday</option>
                        <option value="Tuesday">Tuesday</option>
                        <option value="Wednesday">Wednesday</option>
                        <option value="Thursday">Thursday</option>
                        <option value="Friday">Friday</option>
                        <option value="Saturday">Saturday</option>
                        <option value="Sunday">Sunday</option>
                    </select>
                    <input type="time" name="startTime[]" class="border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" required>
                    <input type="time" name="endTime[]" class="border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" required>
                    <select name="availabilityLocation[]" class="border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" required>
                        <option value="" disabled selected>Location</option>
                        <option value="Online">Online</option>
                        <option value="In-Person">In-Person</option>
                        <option value="Both">Both</option>
                    </select>
                    <button type="button" class="px-2 py-1 text-white bg-red-600 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 remove-availability">Remove</button>
                `;
                availabilitySections.appendChild(section);
            }

            availabilitySections.addEventListener("click", function(e) {
                if (e.target.classList.contains("remove-availability")) {
                    e.target.closest(".availability-section").remove();
                }
            });

            // Form validation
            const form = document.getElementById("tutorForm");
            form.addEventListener("submit", function(e) {
                e.preventDefault();
                if (validateForm()) {
                    this.submit();
                }
            });

            function validateForm() {
                // Add your form validation logic here
                // Return true if the form is valid, false otherwise
                return true;
            }

            // Profile photo preview
            document.getElementById("profilePhoto").addEventListener("change", function (event) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById("profilePhotoPreview").src = e.target.result;
                };
                reader.readAsDataURL(event.target.files[0]);
            });

            // Profile video preview
            document.getElementById("profileVideo").addEventListener("change", function (event) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const videoPreview = document.getElementById("profileVideoPreview");
                    videoPreview.src = e.target.result;
                    videoPreview.classList.remove("hidden");
                    videoPreview.play();
                };
                reader.readAsDataURL(event.target.files[0]);
            });
        });
    </script>
</body>
</html>