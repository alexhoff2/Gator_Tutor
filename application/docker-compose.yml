services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Host port 3000 mapped to container port 3000
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PORT=3000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: ["node", "dev.js"]
    ports:
      - "3001:3001" # Host port 3001 mapped to container port 3001
      - "3002:3002" # Host port 3002 mapped to container port 3002
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PORT=3001
      - BROWSER_SYNC_PORT=3002
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./src:/usr/src/src
      - ./public:/usr/src/public

  db:
    image: mysql:8
    container_name: mysql-db
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
